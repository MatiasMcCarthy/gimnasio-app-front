import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { CommonModule } from '@angular/common';
import { MembresiaCardComponent } from '../membresia-card/membresia-card.component';



@Component({
Â  selector: 'app-cliente-form',
Â  standalone: true,
Â  imports: [CommonModule, ReactiveFormsModule,MembresiaCardComponent],
Â  templateUrl: './cliente-form.component.html',
Â  styleUrls: ['./cliente-form.component.css']
})
export class ClienteFormComponent implements OnInit {
Â  clienteForm!: FormGroup;
Â  editMode = false; // true si estamos editando
Â  clienteId!: string | null;
Â  imagenSeleccionada: File | null = null;

Â  constructor(
Â  Â  private fb: FormBuilder,
Â  Â  private route: ActivatedRoute,
Â  Â  private router: Router
Â  Â  // private api: ApiService Â <-- acÃ¡ conectarÃ­as tu backend
Â  ) {}

Â  ngOnInit(): void {
Â  Â  this.clienteForm = this.fb.group({
Â  Â  Â  nombre: ['', Validators.required],
Â  Â  Â  apellido: ['', Validators.required],
Â  Â  Â  dni: ['', Validators.required],
Â  Â  Â  telefono: ['', Validators.required],
Â  Â  Â  direccion: ['', Validators.required],
Â  Â  Â  imagen: [null]
Â  Â  });
Â  Â  // Verificamos si hay un id en la ruta
Â  Â  this.clienteId = this.route.snapshot.paramMap.get('id');
Â  Â  if (this.clienteId) {
Â  Â  Â  this.editMode = true;
Â  Â  Â  // ðŸ”¹ AquÃ­ traerÃ­as datos del cliente por ID
Â  Â  Â  // this.api.getCliente(this.clienteId).subscribe(cliente => {
Â  Â  Â  // Â  this.clienteForm.patchValue(cliente);
Â  Â  Â  // });
Â  Â  }
Â  }

  // ðŸ”¹ Este es el mÃ©todo correcto para manejar la selecciÃ³n del archivo
  onFileSelected(event: Event): void {
    const input = event.target as HTMLInputElement;
    if (input.files && input.files.length > 0) {
      const file: File = input.files[0];
      this.imagenSeleccionada = file;
      this.clienteForm.get('imagen')?.setValue(file); // ðŸ‘ˆ Usamos clienteForm, no miFormulario
    }
  }

Â  onSubmit() {
Â  Â  if (this.clienteForm.invalid) return;

Â  Â  if (this.editMode) {
Â  Â  Â  console.log('Actualizar cliente:', this.clienteForm.value);
Â  Â  Â  // this.api.updateCliente(this.clienteId, this.clienteForm.value).subscribe(...)
Â  Â  } else {
Â  Â  Â  console.log('Crear cliente:', this.clienteForm.value);
Â  Â  Â  // this.api.createCliente(this.clienteForm.value).subscribe(...)
Â  Â  }

Â  Â  // Redirigir al listado
Â  Â  this.router.navigate(['/gestion-clientes']);
Â  }

Â  cancelar() {
Â  Â  this.router.navigate(['/gestion-clientes']);
Â  }
}